name: Build

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Packages
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_GITHUB }}

      - name: Prepare metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          build-args: |
            APP_RELEASE=${{ github.sha }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Deploy the new image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            # Se connecter au registre
            echo "${{ secrets.TOKEN_GITHUB }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Naviguer vers le répertoire du stack
            cd ~/stacks
            
            # Déployer le stack
            docker stack deploy -c iot-solar-api.yml iot-solar-api --with-registry-auth
            
            ## Tirer la nouvelle image depuis le registre
            #docker pull ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

            ## Démarrer un nouveau conteneur Docker avec l'image mise à jour
            #docker run -d --name iot-solar-api \
            #  -e NODE_ENV=production \
            #  -p 3000:3000 \
            #  ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

            ## Redémarrer Nginx pour prendre en compte les modifications (facultatif si Nginx déjà configuré)
            #sudo systemctl restart nginx